.container {
  background-color: #fff;
  padding: 1rem;
}

.rootGridContainer {
  display: grid;
  /* It's not mandatory to use both properties. If you give one, the other is auto calculated */
  grid-template-columns: 1fr;
  background-color: #ddd;
  gap: 1rem;
  padding: 1rem;
}

.rootGridChild {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 100px);
  background-color: #ddd;
  gap: 1rem;
  padding: 1rem;
  background-color: #f9ab55;
  text-align: center;
}

.rootGridChild:nth-child(even) {
  background-color: #ff6347;
}

.nestedGridChild {
  background-color: #3498db;
  text-align: center;
}

.item1 {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  padding: 1rem;
}

.item1Child {
  background-color: #ff6347;
  text-align: center;
  gap: 1rem;
}

.item1ChildContainer {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  padding: 1rem;
}

.item1NestedChildren {
  gap: 1rem;
  background-color: #20b2aa;
}

.item5 {
  grid-column: 2 / 4;
}

@media screen and (max-width: 768px) {
  .rootGridChild {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(5, 200px);
  }
  .item1 {
    grid-column: auto;
    grid-row: auto;
  }

  .item5 {
    grid-column: auto;
  }
}
